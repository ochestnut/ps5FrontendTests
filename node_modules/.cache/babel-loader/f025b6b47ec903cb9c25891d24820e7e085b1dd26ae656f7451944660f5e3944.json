{"ast":null,"code":"var _jsxFileName = \"/Users/owenchestnut/my-app/src/ListingComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport EditComponent from './EditComponent';\nimport DeleteComponent from './DeleteComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListComponent({\n  songs,\n  loggedInUsername\n}) {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [showEdit, setShowEdit] = useState(false);\n  const [editSong, setEditSong] = useState(null);\n  const [showDelete, setShowDelete] = useState(false);\n  const [deleteSong, setDeleteSong] = useState(null);\n  useEffect(() => {\n    setLoading(false);\n  }, [songs]);\n  const handleEditClick = song => {\n    // Check if the logged-in user is the same as the user who added the song\n    if (loggedInUsername === song.user) {\n      // Set the song to be edited and show the EditComponent\n      setEditSong(song);\n      setShowEdit(true);\n    } else {\n      console.log(\"You don't have permission to edit this song.\");\n    }\n  };\n  const handleDeleteClick = song => {\n    // Check if the logged-in user is the same as the user who added the song\n    if (loggedInUsername === song.user) {\n      // Set the song to be deleted and show the DeleteComponent\n      setDeleteSong(song);\n      setShowDelete(true);\n    } else {\n      console.log(\"You don't have permission to delete this song.\");\n    }\n  };\n  const handleEditClose = () => {\n    // Close the EditComponent\n    setShowEdit(false);\n  };\n  const handleDeleteClose = () => {\n    // Close the DeleteComponent\n    setShowDelete(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"18px\",\n          color: \"green\",\n          textAlign: \"center\"\n        },\n        children: \"Song List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          color: \"green\",\n          textAlign: \"center\",\n          paddingBottom: \"10px\"\n        },\n        children: \"Songs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", song.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", song.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Artist: \", song.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", song.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), loggedInUsername === song.user && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(song),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteClick(song),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), showEdit && /*#__PURE__*/_jsxDEV(\"editComponent\", {\n      song: editSong,\n      onClose: handleEditClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this), showDelete && /*#__PURE__*/_jsxDEV(\"deleteComponent\", {\n      song: deleteSong,\n      onClose: handleDeleteClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n/*import React, { useEffect, useState } from \"react\";\n\nconst ListComponent = ({ onUpdate, onDelete, loggedInUsername }) => {\n  const [isLoading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    // Function to fetch songs\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost/index.php/song/list\");\n        const json = await response.json();\n        setSongs(json.songs);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Call the function to fetch songs\n    fetchSongs();\n\n    // Subscribe to updates (e.g., add or delete) using WebSocket or other mechanisms\n    // This is a simplified example; you may need to implement a more robust solution\n    // For example, using WebSocket to receive real-time updates from the server\n    const interval = setInterval(fetchSongs, 5000); // Update every 5 seconds\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          <h2 style={{ fontSize: \"18px\", color: \"green\", textAlign: \"center\" }}>\n            Song List\n          </h2>\n          <p\n            style={{\n              fontSize: \"14px\",\n              color: \"green\",\n              textAlign: \"center\",\n              paddingBottom: \"10px\",\n            }}\n          >\n            Songs:\n          </p>\n          <ul>\n            {songs.map((item) => (\n              <li key={item.id} style={{ marginBottom: \"10px\" }}>\n                <p>ID: {item.id}</p>\n                <p>Title: {item.title}</p>\n                <p>Artist: {item.artist}</p>\n                <p>Rating: {item.rating}</p>\n\n                {// Conditionally render Update and Delete buttons }\n                {loggedInUsername === item.user && (\n                  <>\n                    <button onClick={() => onUpdate(item)}>Update</button>\n                    <button onClick={() => onDelete(item.id)}>Delete</button>\n                  </>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListComponent;\n*/\n_s(ListComponent, \"e6ML8lMhmm3shmiOsrB3fPNJURA=\");\n_c = ListComponent;\nvar _c;\n$RefreshReg$(_c, \"ListComponent\");","map":{"version":3,"names":["React","useEffect","useState","EditComponent","DeleteComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","ListComponent","songs","loggedInUsername","_s","isLoading","setLoading","showEdit","setShowEdit","editSong","setEditSong","showDelete","setShowDelete","deleteSong","setDeleteSong","handleEditClick","song","user","console","log","handleDeleteClick","handleEditClose","handleDeleteClose","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","textAlign","paddingBottom","map","marginBottom","id","title","artist","rating","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/owenchestnut/my-app/src/ListingComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport EditComponent from './EditComponent';\nimport DeleteComponent from './DeleteComponent';\n\nexport default function ListComponent({ songs, loggedInUsername }) {\n  const [isLoading, setLoading] = useState(true);\n  const [showEdit, setShowEdit] = useState(false);\n  const [editSong, setEditSong] = useState(null);\n  const [showDelete, setShowDelete] = useState(false);\n  const [deleteSong, setDeleteSong] = useState(null);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [songs]);\n\n  const handleEditClick = (song) => {\n    // Check if the logged-in user is the same as the user who added the song\n    if (loggedInUsername === song.user) {\n      // Set the song to be edited and show the EditComponent\n      setEditSong(song);\n      setShowEdit(true);\n    } else {\n      console.log(\"You don't have permission to edit this song.\");\n    }\n  };\n\n  const handleDeleteClick = (song) => {\n    // Check if the logged-in user is the same as the user who added the song\n    if (loggedInUsername === song.user) {\n      // Set the song to be deleted and show the DeleteComponent\n      setDeleteSong(song);\n      setShowDelete(true);\n    } else {\n      console.log(\"You don't have permission to delete this song.\");\n    }\n  };\n\n  const handleEditClose = () => {\n    // Close the EditComponent\n    setShowEdit(false);\n  };\n\n  const handleDeleteClose = () => {\n    // Close the DeleteComponent\n    setShowDelete(false);\n  };\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          <h2 style={{ fontSize: \"18px\", color: \"green\", textAlign: \"center\" }}>\n            Song List\n          </h2>\n          <p\n            style={{\n              fontSize: \"14px\",\n              color: \"green\",\n              textAlign: \"center\",\n              paddingBottom: \"10px\",\n            }}\n          >\n            Songs:\n          </p>\n          <ul>\n            {songs.map((song) => (\n              <li key={song.id} style={{ marginBottom: \"10px\" }}>\n                <p>ID: {song.id}</p>\n                <p>Title: {song.title}</p>\n                <p>Artist: {song.artist}</p>\n                <p>Rating: {song.rating}</p>\n                {loggedInUsername === song.user && (\n                  <>\n                    <button onClick={() => handleEditClick(song)}>Edit</button>\n                    <button onClick={() => handleDeleteClick(song)}>Delete</button>\n                  </>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* EditComponent */}\n      {showEdit && <editComponent song={editSong} onClose={handleEditClose} />}\n\n      {/* DeleteComponent */}\n      {showDelete && <deleteComponent song={deleteSong} onClose={handleDeleteClose} />}\n    </div>\n  );\n}\n\n/*import React, { useEffect, useState } from \"react\";\n\nconst ListComponent = ({ onUpdate, onDelete, loggedInUsername }) => {\n  const [isLoading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    // Function to fetch songs\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost/index.php/song/list\");\n        const json = await response.json();\n        setSongs(json.songs);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Call the function to fetch songs\n    fetchSongs();\n\n    // Subscribe to updates (e.g., add or delete) using WebSocket or other mechanisms\n    // This is a simplified example; you may need to implement a more robust solution\n    // For example, using WebSocket to receive real-time updates from the server\n    const interval = setInterval(fetchSongs, 5000); // Update every 5 seconds\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          <h2 style={{ fontSize: \"18px\", color: \"green\", textAlign: \"center\" }}>\n            Song List\n          </h2>\n          <p\n            style={{\n              fontSize: \"14px\",\n              color: \"green\",\n              textAlign: \"center\",\n              paddingBottom: \"10px\",\n            }}\n          >\n            Songs:\n          </p>\n          <ul>\n            {songs.map((item) => (\n              <li key={item.id} style={{ marginBottom: \"10px\" }}>\n                <p>ID: {item.id}</p>\n                <p>Title: {item.title}</p>\n                <p>Artist: {item.artist}</p>\n                <p>Rating: {item.rating}</p>\n\n                {// Conditionally render Update and Delete buttons }\n                {loggedInUsername === item.user && (\n                  <>\n                    <button onClick={() => onUpdate(item)}>Update</button>\n                    <button onClick={() => onDelete(item.id)}>Delete</button>\n                  </>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListComponent;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,aAAaA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMa,eAAe,GAAIC,IAAI,IAAK;IAChC;IACA,IAAIb,gBAAgB,KAAKa,IAAI,CAACC,IAAI,EAAE;MAClC;MACAP,WAAW,CAACM,IAAI,CAAC;MACjBR,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLU,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC7D;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIJ,IAAI,IAAK;IAClC;IACA,IAAIb,gBAAgB,KAAKa,IAAI,CAACC,IAAI,EAAE;MAClC;MACAH,aAAa,CAACE,IAAI,CAAC;MACnBJ,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLM,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC/D;EACF,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAb,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,GAC7BpB,SAAS,gBACRP,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAIyB,KAAK,EAAE;UAAEO,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAP,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL/B,OAAA;QACEyB,KAAK,EAAE;UACLO,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE,OAAO;UACdC,SAAS,EAAE,QAAQ;UACnBC,aAAa,EAAE;QACjB,CAAE;QAAAR,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ/B,OAAA;QAAA2B,QAAA,EACGvB,KAAK,CAACgC,GAAG,CAAElB,IAAI,iBACdlB,OAAA;UAAkByB,KAAK,EAAE;YAAEY,YAAY,EAAE;UAAO,CAAE;UAAAV,QAAA,gBAChD3B,OAAA;YAAA2B,QAAA,GAAG,MAAI,EAACT,IAAI,CAACoB,EAAE;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB/B,OAAA;YAAA2B,QAAA,GAAG,SAAO,EAACT,IAAI,CAACqB,KAAK;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B/B,OAAA;YAAA2B,QAAA,GAAG,UAAQ,EAACT,IAAI,CAACsB,MAAM;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5B/B,OAAA;YAAA2B,QAAA,GAAG,UAAQ,EAACT,IAAI,CAACuB,MAAM;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC3B1B,gBAAgB,KAAKa,IAAI,CAACC,IAAI,iBAC7BnB,OAAA,CAAAE,SAAA;YAAAyB,QAAA,gBACE3B,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAACC,IAAI,CAAE;cAAAS,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3D/B,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACJ,IAAI,CAAE;cAAAS,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eAC/D,CACH;QAAA,GAVMb,IAAI,CAACoB,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EAGAtB,QAAQ,iBAAIT,OAAA;MAAekB,IAAI,EAAEP,QAAS;MAACgC,OAAO,EAAEpB;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGvElB,UAAU,iBAAIb,OAAA;MAAiBkB,IAAI,EAAEH,UAAW;MAAC4B,OAAO,EAAEnB;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EAzB,EAAA,CA1FwBH,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}